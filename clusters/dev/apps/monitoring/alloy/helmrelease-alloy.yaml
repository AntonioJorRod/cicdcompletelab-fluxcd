apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: alloy
  namespace: monitoring
spec:
  interval: 5m
  chart:
    spec:
      chart: grafana-agent
      version: 0.37.0
      sourceRef:
        kind: HelmRepository
        name: grafana-repo
        namespace: flux-system
  values:
    controller:
      type: daemonset
    agent:
      configMap:
        create: true
        content: |
          logging {
            level = "info"
            format = "logfmt"
          }
          discovery.kubernetes "pods" {
            role = "pod"
          }
          discovery.relabel "pods" {
            targets = discovery.kubernetes.pods.targets

            rule {
              source_labels = ["__meta_kubernetes_namespace"]
              target_label = "namespace"
              action = "replace"
            }

            rule {
              source_labels = ["__meta_kubernetes_pod_label_app_kubernetes_io_name"]
              target_label = "app"
              action = "replace"
            }

            rule {
              source_labels = ["__meta_kubernetes_pod_container_name"]
              target_label = "container"
              action = "replace"
            }

            rule {
              source_labels = ["__meta_kubernetes_pod_name"]
              target_label = "pod"
              action = "replace"
            }
          }
          loki.source.kubernetes "pods" {
            targets    = discovery.relabel.pods.output
            forward_to = [loki.process.process.receiver]
          }
          loki.process "process" {
            forward_to = [loki.write.loki.receiver]

            stage.drop {
              older_than          = "1h"
              drop_counter_reason = "too old"
            }
            stage.match { 
              selector = "{instance=~\".*\"}"
              stage.json {
                expressions = {
                  level = "\"level\"",
                }
              }
              stage.labels {
                values = { 
                  level = "level",
                }
              }
            }
            stage.label_drop {
              values = [ "service_name" ]
            }
          }
          loki.write "loki" {
            endpoint {
              url = "http://loki.monitoring.svc.cluster.local:3100/loki/api/v1/push"
            }
          }
      extraVolumes:
        - name: varlog
          hostPath:
            path: /var/log
      extraVolumeMounts:
        - name: varlog
          mountPath: /var/log
    resources:
      limits:
        cpu: 200m
        memory: 128Mi
      requests:
        cpu: 100m
        memory: 128Mi
