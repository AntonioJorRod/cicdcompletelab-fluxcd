nodeExporter:
  enabled: true

rbac:
  create: true

configmapReload:
  prometheus:
    image:
      tag: v0.83.0

server:
  extraFlags:
    - web.enable-lifecycle
  global:
    scrape_interval: 1m
    scrape_timeout: 10s
    evaluation_interval: 1m
  persistentVolume:
    size: 10Gi
    storageClass: standard
  retention: "15d"
  service:
    type: NodePort
    nodePort: 31058
  resources:
    limits:
      cpu: 500m
      memory: 512Mi
    requests:
      cpu: 200m
      memory: 256Mi

serverFiles:
  recording_rules.yml:
    groups:
      - name: recording-rules
        rules:
          - record: job:cpu_usage:rate5m
            expr: rate(node_cpu_seconds_total{job="kubernetes-service-endpoints"}[5m])
          - record: job:up_zero
            expr: up == 0
  prometheus.yml:
    rule_files:
      - /etc/config/recording_rules.yml
      - /etc/config/alerting_rules.yml
    scrape_configs:
      - job_name: 'nginx-exporter-react-app'
        static_configs:
          - targets:
              - nginx-exporter-svc.react-app.svc.cluster.local:9113
      - job_name: 'node-exporter'
        static_configs:
          - targets:
              - prometheus-prometheus-node-exporter.monitoring.svc.cluster.local:9100
      - job_name: 'loki-metrics'
        static_configs:
          - targets:
              - loki.monitoring.svc.cluster.local:3100


alertmanager:
  enabled: true
  persistence:
    size: 2Gi
  resources:
    limits:
      cpu: 200m
      memory: 256Mi
    requests:
      cpu: 100m
      memory: 128Mi

kube-state-metrics:
  enabled: true
  resources:
    limits:
      cpu: 100m
      memory: 200Mi
    requests:
      cpu: 50m
      memory: 100Mi

prometheus-node-exporter:
  enabled: true
  resources:
    limits:
      cpu: 100m
      memory: 100Mi
    requests:
      cpu: 50m
      memory: 50Mi

prometheus-pushgateway:
  enabled: true
  serviceAnnotations:
    prometheus.io/probe: pushgateway
  resources:
    limits:
      cpu: 100m
      memory: 100Mi
    requests:
      cpu: 50m
      memory: 50Mi
